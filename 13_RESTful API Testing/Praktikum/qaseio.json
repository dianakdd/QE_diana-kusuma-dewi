{"cases":[],"suites":[{"id":1,"title":"Test Case Method GET (Get All Products)","description":null,"preconditions":null,"suites":[{"id":2,"title":"Test Case Method POST (Create a New Product)","description":null,"preconditions":null,"suites":[{"id":3,"title":"Test Case Method GET (Get Product By ID)","description":null,"preconditions":null,"suites":[{"id":4,"title":"Test Case Method PUT (Update Product By ID)","description":null,"preconditions":null,"suites":[],"cases":[{"id":10,"title":"UPDATE a new product with valid endpoint","description":"User update a new product with valid endpoint","preconditions":"User set PUT - update a new product endpoint","postconditions":"API update the product by ID endpoint","priority":"high","severity":"normal","type":"functional","behavior":"positive","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send PUT - update a new product HTTP request with valid endpoint","expected_result":"Then user received valid HTTP response code 200 OK","data":"1. Endpoint : https://jsonplaceholder.typicode.com/posts/1","steps":[]}],"tags":[],"params":[]},{"id":11,"title":"UPDATE a new product with invalid endpoint","description":"User update a new product with invalid endpoint","preconditions":"User set PUT - update a new product endpoint","postconditions":"API can't update the product by ID invalid endpoint","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send PUT - update a new product HTTP request with invalid endpoint","expected_result":"Then user received valid HTTP response code 404 Not Found","data":"1. Endpoint : https://jsonplaceholder.typicode.com/post/1","steps":[]}],"tags":[],"params":[]},{"id":12,"title":"UPDATE a new product with empty request body","description":"User update a new product with empty request body","preconditions":"User set PUT - update a new product endpoint","postconditions":"API can't update the product by ID endpoint","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send PUT - update a new product HTTP request","expected_result":"Then user received valid HTTP response code 500 Internal Server Error","data":"1) Endpoint : https://jsonplaceholder.typicode.com/posts/1\n2) userId : -\n3) id : -\n4) title : -\n5) body : -","steps":[]}],"tags":[],"params":[]}]}],"cases":[{"id":7,"title":"GET product by ID with valid endpoint","description":"User get product by ID with valid endpoint","preconditions":"User sends request to GET all products by ID endpoint","postconditions":"API can't get the product by ID endpoint","priority":"high","severity":"normal","type":"functional","behavior":"positive","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send GET - product by ID HTTP request with valid endpoint","expected_result":"Then user received valid HTTP response code 200 OK","data":"1. Endpoint : https://jsonplaceholder.typicode.com/posts/1","steps":[]}],"tags":[],"params":[]},{"id":8,"title":"GET product by ID with invalid endpoint","description":"User get product by ID with invalid endpoint","preconditions":"User sends request to GET all products by ID endpoint","postconditions":"API can't get the product by ID endpoint","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send GET - product by ID HTTP request with invalid endpoint","expected_result":"Then user received valid HTTP response code 404 Not Found","data":"1. Endpoint : https://jsonplaceholder.typicode.com/post/1","steps":[]}],"tags":[],"params":[]}]}],"cases":[{"id":3,"title":"CREATE a new product with valid endpoint","description":"User create a new product with valid endpoint","preconditions":"User set POST - create a new product endpoint","postconditions":"API send the product by ID endpoint","priority":"high","severity":"normal","type":"functional","behavior":"positive","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send POST - create a new product HTTP request with valid endpoint","expected_result":"Then user received valid HTTP response code 200 OK","data":"1. Endpoint : https://jsonplaceholder.typicode.com/posts","steps":[]}],"tags":[],"params":[]},{"id":4,"title":"CREATE a new product with invalid endpoint","description":"User create a new product with valid endpoint","preconditions":"User set POST - create a new product endpoint","postconditions":"API can't send the product by ID endpoint","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send POST - create a new product HTTP request with invalid endpoint","expected_result":"Then user received valid HTTP response code 404 Not Found","data":"1. Endpoint : https://jsonplaceholder.typicode.com/post","steps":[]}],"tags":[],"params":[]},{"id":5,"title":"CREATE a new product with empty request body","description":"User create a new product with empty request body","preconditions":"User set POST - create a new product endpoint","postconditions":"API can't send the product by ID endpoint","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send POST - create a new product HTTP request","expected_result":"Then user received valid HTTP response code 500 Internal Server Error","data":"1) Endpoint : https://jsonplaceholder.typicode.com/posts\n2) userId : -\n3) id : -\n4) title : -\n5) body : -","steps":[]}],"tags":[],"params":[]},{"id":6,"title":"CREATE a new product with input valid userId, id, title, and body","description":"User create a new product with input valid userId, id, title, and body","preconditions":"User set POST - create a new product endpoint","postconditions":"API send the product by ID endpoint","priority":"high","severity":"normal","type":"functional","behavior":"positive","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send POST - create a new product HTTP request","expected_result":"Then user received valid HTTP response code 200 OK And user see valid new product","data":"1) Endpoint : https://jsonplaceholder.typicode.com/posts\n2) userId : 1\n3) id : 1\n4) title : Cukurukuk\n5) body : Pukjeru","steps":[]}],"tags":[],"params":[]}]},{"id":5,"title":"Test Case Method DELETE (Delete a Product)","description":null,"preconditions":null,"suites":[],"cases":[{"id":13,"title":"DELETE a product with valid endpoint","description":"User delete a product with valid endpoint","preconditions":null,"postconditions":"API delete the product by ID endpoint","priority":"high","severity":"normal","type":"functional","behavior":"positive","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send DELETE - a product HTTP request with valid endpoint","expected_result":"Then user received valid HTTP response code 200 OK","data":"1. Endpoint : https://jsonplaceholder.typicode.com/posts/1","steps":[]}],"tags":[],"params":[]},{"id":14,"title":"DELETE a product with invalid endpoint","description":"User delete a product with invalid endpoint","preconditions":"User set DELETE - a product endpoint","postconditions":"API can't delete the product by ID endpoint","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send DELETE - a product HTTP request with invalid endpoint","expected_result":"Then user received valid HTTP response code 404 Not Found","data":"1. Endpoint : https://jsonplaceholder.typicode.com/post/1","steps":[]}],"tags":[],"params":[]}]}],"cases":[{"id":1,"title":"GET all products with valid endpoint","description":"User get product by ID with valid endpoint","preconditions":"User sends request to GET all products by ID endpoint","postconditions":"API show all product by ID endpoint","priority":"high","severity":"normal","type":"functional","behavior":"positive","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send GET - all products HTTP request with valid endpoint","expected_result":"Then user received valid HTTP response code 200 OK","data":"1. Endpoint : https://jsonplaceholder.typicode.com/posts","steps":[]}],"tags":[],"params":[]},{"id":2,"title":"GET all products with invalid endpoint","description":"User get product by ID with invalid endpoint","preconditions":"User sends request to GET all products by ID endpoint","postconditions":"Then user received valid HTTP response code 404 Not Found","priority":"medium","severity":"normal","type":"functional","behavior":"negative","automation":"is-not-automated","status":"actual","is_flaky":"no","layer":"api","milestone":null,"custom_fields":[],"steps_type":"classic","steps":[{"position":1,"action":"When user send GET - all products HTTP request with invalid endpoint","expected_result":"Then user received valid HTTP response code 404 Not Found","data":"1. Endpoint : https://jsonplaceholder.typicode.com/post","steps":[]}],"tags":[],"params":[]}]}]}